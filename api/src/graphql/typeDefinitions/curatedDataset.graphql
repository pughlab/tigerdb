# type Subject {
#     subjectID: ID! @id
#     childID: ID!
# }



# type DataVariableDefinition {
#     dataVariable: DataVariable! @relationship(type: "HAS_DEFINITION", direction: IN)
#     dataVariableDefinitionID: ID! @id
#     label: String!
# }

# type DataVariableSample {
#     dataVariableSampleID: ID! @id
#     # value: JSON
#     currentValueState: DataVariableSampleState! @relationship(type: "HAS_DEFINITION", direction: IN)
#     previousValueStates: [DataVariableSampleState!]! @relationship(type: "HAS_DEFINITION", direction: IN)
# }

# # For time versioning
# type DataVariableSampleState {
#     value: JSON
# }

type CuratedDataset {
    curatedDatasetID: ID! @id
    # createdAt: DateTime! @timestamp(operations: [CREATE])
    # updatedAt: DateTime! @timestamp(operations: [UPDATE])
    datasetVariables: [DatasetVariable!]! @relationship(type: "HAS_DATASET_VARIABLE", direction: OUT)
    dataset: Dataset! @relationship(type: "HAS_CURATED_DATASET", direction: IN)
    processedDataset: ProcessedDataset! @relationship(type: "GENERATED_CURATED_DATASET", direction: IN)
}

# type Mutation {
#     createCuratedDatasetFromCSVCodebook(name: String!, 
#         allowedStudy: String!
#         allowedSite: String!
#         rawDatasetID: ID!): Boolean!
#     createCuratedDatasetFromRawDatasetNew(
#         rawDatasetID: ID!
#         rawObjectName: String!
#         codebookObjectName: String!
#     ): CuratedDataset
#     createCuratedDatasetFromRawDataset(
#         name: String!
#         description: String!
#         rawDatasetID: ID!
#     ): CuratedDataset!
#         createCuratedDataVariableFromDataset(
#         name: String!
#         description: String!
#         datasetID: ID!
#     ): CuratedDataset!
# }


type Mutation {
    createCuratedDatasetFromDataset(
        datasetID: ID!
        bucketName: ID!
        objectName: ID!
        selectedDelimiter: String! # New field for delimiter
    ): CuratedDataset!
}

# extend type CuratedDataset @auth(
#   rules: [{
#       isAuthenticated: true,
#     }]
# )