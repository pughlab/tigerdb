enum RunStatus {
    pending
    submitted
    completed
    failed
}

type Run {
    runID: ID! @id
    wesID: ID
    name: String!
    description: String
    datasets: [Dataset!]! @relationship(type: "HAS_RUN", direction: IN)
    # project: Project! @relationship(type: "HAS_RUN", direction: IN)
    createdOn: DateTime! @timestamp(operations: [CREATE])
    submittedOn: DateTime
    completedOn: DateTime
    status: RunStatus! @default(value: pending)   
    createdBy: KeycloakUser! @relationship(type: "CREATED_BY", direction: OUT)
    logs: String
}

input RunInput {
    runID: ID!
    wesID: ID
    name: String
    description: String
    datasets: [DatasetInput]
    status: RunStatus
}

type Query{
  getRuns: [Run]
}

type Mutation {
    createRunWithMinioBucket(
        # project: ProjectInput!
        # wesID: ID
        name: String!
        description: String
        # datasets: [DatasetInput!]!
        datasetIDs: [ID!]!
    ): Run!,
    updateRun(
        runID: ID!
        datasets: [DatasetInput]!
        wesID: ID
        name: String
        description: String
    ): Run!
}