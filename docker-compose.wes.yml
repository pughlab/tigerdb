version: '3'

services:
  neo4j:
    image: neo4j:4.4.7
    ports:
      - 7474:7474
      - 7687:7687
    expose:
      - 7474
    environment:
      - NEO4J_AUTH=neo4j/letmein
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_dbms_shell_enabled=true
      # - NEO4JLABS_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_apoc_import_file_use__neo4j__config=true
    volumes:
      # - tcrdb_neo4j_volume:/var/lib/neo4j/data
      - ./neo4j/plugins:/var/lib/neo4j/plugins
      - ./neo4j/import:/var/lib/neo4j/import
      - ./neo4j/data:/var/lib/neo4j/data
      # - ./api/src/cql/neo4j.conf:/var/lib/neo4j/conf/neo4j.conf

  api:
    # For non-M1 machines: comment out arm64v8 and platform field
    # image: arm64v8/node:16
    # platform: linux/arm64/v8
    image: node:16
    working_dir: /usr/src/service
    command: >
      sh -c "node api/src/proxy_pass minio 9000 &
             npm run start:api"
    expose:
      - 4001
    ports:
      - 4001:4001
      - 9231:9231
    environment:
      # - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_URI=${NEO4J_URI}
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - GRAPHQL_LISTEN_PORT=${GRAPHQL_SERVER_PORT}
      - GRAPHQL_URI=${GRAPHQL_URI}
      # Default is 2gb (garbage collection heap memory)
      - NODE_OPTIONS=--max_old_space_size=4096
    links:
      - neo4j
    depends_on:
      - neo4j
      - minio
      - keycloak

    volumes:
      - .:/usr/src/service
      # - tcrdb_api_volume:/tcrdb_data

  ui:
    # For non-M1 machines: comment out arm64v8 and platform field
    image: node:16
    # image: arm64v8/node:16
    # platform: linux/arm64/v8
    working_dir: /usr/src/service
    command: >
      sh -c "npm run start:ui"
    ports:
      - 3001:3001
    environment:
      - CI=true
      - REACT_APP_GRAPHQL_URI=${GRAPHQL_SERVER_PATH}
      - PROXY=${GRAPHQL_URI}
      - NODE_OPTIONS=--max_old_space_size=4096
    links:
      - api
    depends_on:
      - api
      - minio
      - keycloak
    volumes:
      - .:/usr/src/service

  minio:
    image: minio/minio:RELEASE.2022-07-30T05-21-40Z
    expose:
      - ${MINIO_CONSOLE_PORT}
    ports:
      - ${MINIO_API_PORT}:${MINIO_API_PORT}
    volumes:
      - ./minio/data:/data
      - /etc/localtime:/etc/localtime:ro
      # - ~/etc/timezone:/etc/localtime:ro
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"

  keycloak:
    # For non-M1 machines: use keycloak 11
    image: jboss/keycloak:11.0.1
    # image: jboss/keycloak:16.1.1
    # image: wizzn/keycloak:12
    container_name: keycloak
    expose: 
      - 8443
      - 8080
    ports:
      - "8085:8443"
      - "8080:8080"
    volumes:
      - ./keycloak/realm-export.json:/opt/jboss/keycloak/realm-export.json
      - tcrdb_keycloak_volume:/opt/jboss/keycloak/standalone/data
      - ./nginx/certs/bundle.crt:/etc/x509/https/tls.crt
      - ./nginx/certs/bundle.key:/etc/x509/https/tls.key
    # depends_on:
    #   - mariadb

    # environment:
    #   - KEYCLOAK_USER=${KEYCLOAK_USER}
    #   - KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD}
    #   - KEYCLOAK_IMPORT=/opt/jboss/keycloak/realm-export.json
    #   # - DB_VENDOR=mariadb
    #   - DB_VENDOR=h2
    #   - PROXY_ADDRESS_FORWARDING=true
    #   - REDIRECT_SOCKET="proxy-https"
    #   - KEYCLOAK_FRONTEND_URL=https://${KEYCLOAK_SERVER_HOST_AND_PORT}/auth
    #   - DB_ADDR=${KEYCLOAK_DB_ADDR}
    #   - DB_PORT=${KEYCLOAK_DB_PORT}
    #   - DB_DATABASE=${KEYCLOAK_DB_DATABASE}
    #   - DB_USER=${KEYCLOAK_DB_USER}
    #   - DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}

    environment:
      - KEYCLOAK_USER=${KEYCLOAK_USER}
      - KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD}
      - KEYCLOAK_IMPORT=/opt/jboss/keycloak/realm-export.json
      - DB_VENDOR=h2
      - PROXY_ADDRESS_FORWARDING=true
      - REDIRECT_SOCKET="proxy-https"
      - KEYCLOAK_FRONTEND_URL=https://${KEYCLOAK_SERVER_HOST_AND_PORT}/auth

  # funnel:
  #   image: ohsucompbio/funnel-dind
  #   container_name: funnel
  #   privileged: true
  #   # command: funnel server run --Server.HTTPPort 8003 --Server.RPCPort 9093 --config /opt/funnel/funnel/funnel_config.yaml
  #   entrypoint: funnel server run --Server.HTTPPort 8003 --Server.RPCPort 9093 --config /opt/funnel/funnel/funnel_config.yaml
  #   expose:
  #     - 8003
  #     - 9093
  #   # ports:
  #   #   # - 8003:8003
  #   #   - 9093:9093
  #   depends_on:
  #     - mongo
  #   volumes:
  #     - ./api/src/funnel:/opt/funnel/funnel
  #     - .:/opt/funnel/service
  #     - /var/run/docker.sock:/var/run/docker.sock

  # nginx:
  #   restart: ${RESTART}
  #   build:
  #     context: .
  #     args:
  #       GITLAB_AUTH_TOKEN: ${GITLAB_AUTH_TOKEN}
  #   environment:
  #     - NODE_ENV=production
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   depends_on:
  #     - api
  #     - minio
  #     - neo4j
  #     - keycloak
  #   volumes:
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/certs:/etc/nginx/certs
  #   entrypoint: >
  #     nginx -g "daemon off;"

  graphene: 
    # image: crescentdev/graphene
    privileged: true
    # build: graphene
    build:
      context: ./neomodel
    container_name: graphene
    expose:
      - ${GRAPHENE_PORT}
    ports:
      - "${GRAPHENE_PORT}:${GRAPHENE_PORT}"
    environment:
      - MINIO_HOST_PORT=${MINIO_CONSOLE_PORT}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - WES_PORT=${WES_PORT}
      - WES_SERVER=${WES_SERVER}
      - GRAPHENE_DEV=${GRAPHENE_DEV}
    volumes:
      - ./neomodel:/app
      - ./minio:/app/minio
      - ./tcr-db:/app/tcr-db
    links: 
      - minio
      - neo4j
    depends_on:
      - minio 
      - neo4j
    working_dir: /app
    command: uvicorn main:app --host 0.0.0.0 --port ${GRAPHENE_PORT} --reload



  # mongo:
  #   image: mongo:5.0.17
  #   ports:
  #     - "27017:27017"
  #   # environment:
  #   #   - MONGO_INITDB_ROOT_USERNAME=mongoadmin
  #   #   - MONGO_INITDB_ROOT_PASSWORD=mongoadmin
  #   volumes:
  #     - tcrdb_mongo_volume:/data/db
  #     # - /etc/localtime:/etc/localtime:ro
  #     - ~/etc/timezone:/etc/localtime:ro
  #     # - ./mongo-entrypoint/:/docker-entrypoint-initdb.d/

  # mariadb:
  #   image: mariadb:10.7.8
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
  #     MYSQL_DATABASE: ${KEYCLOAK_DB_DATABASE}
  #     MYSQL_USER: ${KEYCLOAK_DB_USER}
  #     MYSQL_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
  #   volumes:
  #     - tcrdb_mariadb_volume:/var/lib/mysql
  #   ports:
  #     - "3306:3306"


  wes-server:
    # image: "crescent-frontend_wes-server"
    image: crescentdev/wes-server-crescent-fork
    container_name: "wes-server"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /var/lib/docker/volumes:/var/lib/docker/volumes:rw
      - /tmp:/tmp:rw
      - /var/lib/toil:/var/lib/toil:rw
      - ./wes/workflows:/root/workflows:rw
      - ./wes/logs:/root/logs:rw
    ports:
      - "${WES_PORT}:8081"
    environment:
      - MINIO_HOST_PORT=${MINIO_CONSOLE_PORT}
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
    entrypoint: /root/mesos-wes.sh
    command:
      - --port=8081
      - --backend=${WES_BACKEND}
      - --opt=runner=${WES_CWL_RUNNER}
      - --opt=extra=--cleanWorkDir=never
      - --opt=extra=--writeLogs=/root/logs
      - --opt=extra=--writeLogsFromAllJobs
      - --opt=extra=--maxLogFileSize=0 
      - --opt=extra=--realTimeLogging
      - --opt=extra=--retryCount=0


volumes:
  # tcrdb_minio_volume:
  #   external: true
  tcrdb_keycloak_volume:
    external: true
  # tcrdb_api_volume:
  #   external: true
  # tcrdb_neo4j_volume:
  #   external: true
  # tcrdb_mongo_volume:
  #   external: true
  # tcrdb_mariadb_volume:
  #   external: true